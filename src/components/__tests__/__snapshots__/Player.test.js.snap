// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Player renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Player
    handleMovement={[MockFunction]}
    handlePopupInstructions={[MockFunction]}
    player={
      Object {
        "left": 400,
        "sessionQuestions": Array [],
        "top": 336,
      }
    }
    startCreditPlayer={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <div
          id="pick"
          style={
            Object {
              "backgroundImage": "url(pick.png)",
              "backgroundPosition": "center",
              "height": "16px",
              "left": 408,
              "position": "absolute",
              "rotate": 90,
              "top": 336,
              "width": "16px",
            }
          }
        />,
        <div
          id="player"
          style={
            Object {
              "backgroundImage": "url(player.png)",
              "backgroundPosition": "center",
              "height": "16px",
              "left": 400,
              "position": "absolute",
              "top": 336,
              "width": "16px",
              "zIndex": 1,
            }
          }
        />,
        <Connect(MessageForm)
          handleOnFocus={[Function]}
          style={
            Object {
              "height": "40px",
              "width": "40px",
              "zIndex": 0,
            }
          }
        />,
        <Connect(MessageFeed) />,
      ],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "pick",
          "style": Object {
            "backgroundImage": "url(pick.png)",
            "backgroundPosition": "center",
            "height": "16px",
            "left": 408,
            "position": "absolute",
            "rotate": 90,
            "top": 336,
            "width": "16px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "player",
          "style": Object {
            "backgroundImage": "url(player.png)",
            "backgroundPosition": "center",
            "height": "16px",
            "left": 400,
            "position": "absolute",
            "top": 336,
            "width": "16px",
            "zIndex": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleOnFocus": [Function],
          "style": Object {
            "height": "40px",
            "width": "40px",
            "zIndex": 0,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <div
            id="pick"
            style={
              Object {
                "backgroundImage": "url(pick.png)",
                "backgroundPosition": "center",
                "height": "16px",
                "left": 408,
                "position": "absolute",
                "rotate": 90,
                "top": 336,
                "width": "16px",
              }
            }
          />,
          <div
            id="player"
            style={
              Object {
                "backgroundImage": "url(player.png)",
                "backgroundPosition": "center",
                "height": "16px",
                "left": 400,
                "position": "absolute",
                "top": 336,
                "width": "16px",
                "zIndex": 1,
              }
            }
          />,
          <Connect(MessageForm)
            handleOnFocus={[Function]}
            style={
              Object {
                "height": "40px",
                "width": "40px",
                "zIndex": 0,
              }
            }
          />,
          <Connect(MessageFeed) />,
        ],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "pick",
            "style": Object {
              "backgroundImage": "url(pick.png)",
              "backgroundPosition": "center",
              "height": "16px",
              "left": 408,
              "position": "absolute",
              "rotate": 90,
              "top": 336,
              "width": "16px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "player",
            "style": Object {
              "backgroundImage": "url(player.png)",
              "backgroundPosition": "center",
              "height": "16px",
              "left": 400,
              "position": "absolute",
              "top": 336,
              "width": "16px",
              "zIndex": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleOnFocus": [Function],
            "style": Object {
              "height": "40px",
              "width": "40px",
              "zIndex": 0,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
